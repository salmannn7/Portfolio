[
    {
        "id": 1,
        "name": "MUFC DATABASE (2023)",
        "tags": "mufc-database-project",
        "note": "## UNAVAILABLE TO VIEW ##",
        "desc": "In the summer of 2023, I embarked on a passion project centred around the football club I support, Manchester United FC. This project was not only a labour of passion but also an opportunity to enhance my full-stack development skills. The web application I developed serves as a comprehensive database, containing detailed information about the club. While the project was intricate and showcased my ability to tackle complex tasks, it remained a work in progress. Unfortunately, I had to set it aside as I began my final year of university and could not complete it fully.\n\nKey Features:\n • Player Viewing: Users can explore detailed profiles of Manchester United players, including information such as their name, age, height, dominant foot, and on-field positions.\n • Team Setup: The team setup page allows users to create their ideal Manchester United lineup. Users can position their chosen players in any formation based on their historical roles and define specific team roles for each player. A dynamic lineup map displays the selected arrangement, showing how the team would look across different phases of play.\n • User Accounts: Registered users have the ability to add new players to the database. However, this feature is currently restricted to admin accounts only.\n\nDevelopment Highlights: \nInspired by my previous full stack projects from the units ‘Full Stack Development’ and ‘Thematic Project’, the tech stack remains as follows:\n • Server-side: Built with Express.JS, a Node.JS framework. Using this framework twice before, I had a much easier time developing this side of the project.\n • Client-side: Developed using Vue.JS, I also had a much easier time using this framework, furthering my experience with it and exploring different aspects of the framework such as the different lifecycle hooks and custom attributes.\n • Styling: Again using Tailwind, this styling framework was a walk in the park to me at this point, using it twice before and also my experience with CSS.\n\nAlthough this project remains incomplete, working on it ensured that I stayed sharp and prepared as I transitioned into my final year after the summer break. Along the way, I also acquired valuable new skills. More importantly, it taught me the value of pursuing passion projects as a means to refine my abilities. This experience has inspired me to undertake future personal endeavours in software development that are driven by my own interests, outside the framework of academic or institutional settings.",
        "frameworks": [
            {
                "name": "Vue.JS"
            },
            {
                "name": "Node.JS"
            },
            {
                "name": "Express.JS"
            },
            {
                "name": "Tailwind CSS"
            },
            {
                "name": "SQLite"
            }
        ],
        "languages": [
            {
                "name": "HTML"
            },
            {
                "name": "CSS"
            },
            {
                "name": "JavaScript"
            },
            {
                "name": "SQL"
            }
        ],
        "environments": [
            {
                "name": "Visual Studio Code"
            },
            {
                "name": "Postman"
            }
        ],
        "links": [
            {
                "type": "Frontend",
                "site": "GitHub",
                "link": "N/A",
                "status": "unavailable"
            },
            {
                "type": "Backend",
                "site": "GitHub",
                "link": "N/A",
                "status": "unavailable"
            }
        ]
    },
    {
        "id": 2,
        "name": "UNCANNY CLOTHING (2024)",
        "tags": "uncanny-clothing",
        "note": "## UNAVAILABLE TO VIEW ##",
        "desc": "In the autumn of 2024, I set out to recreate and reimagine the E-Commerce website I had developed as part of my Synoptic Project during my final year of university. While the original project focused on sneaker sales, this new iteration, titled ‘Uncanny’, is an original clothing-based site inspired by brands like Represent and Essentials. Post-graduation, I aimed to expand my skill set by exploring new frameworks and environments that I didn’t have the opportunity to work with during my time in education. This project served as both a creative outlet and a way to push my technical abilities further.\n\nKey Features:\nDue to the incompleteness of the project, the website is mainly a visual, not many features are included although the structure and styling of the website are appealing. The very few key features of the site include:\n • Product Viewing: Users can explore the different products of the website, including tracksuits, jackets, and t-shirts. However, the product variety is limited.\n • Product Filters: Users are able to filter the products via categories, colours, collections, and product types, with the filter options available being based upon all the products available on the website and uses the URL query to filter the products.\n • Product Sorting: Users are able to sort the products via featured, newest, prices from low to high, and prices from high to low.\n\nDevelopment Highlights: \nThis project features a completely new tech stack compared to my previous work, with changes to both the frontend and backend frameworks:\n • Server-side: The backend is built using Flask, a Python-based framework known for its simplicity and flexibility. I was inspired using this by a fellow colleague who utilised this framework in their Synoptic Project.\n • Client-side: For the first time, I utilised React.JS, a popular JavaScript framework. I chose React.JS because many roles I’m pursuing specifically require experience with it. Despite being new to the framework, I was able to quickly grasp its concepts and implement it effectively and smoothly.\n • Styling: The styling framework remains Tailwind CSS, as I find it more optimal than alternatives like Bootstrap due to its flexibility and efficiency.\n\nAs this project is still incomplete and a relatively recent venture, as of writing this description, it hasn’t yet contributed significantly to my interpersonal development. However, from a technical perspective, it has been highly valuable. One of the most important skills I’ve gained is proficiency in React, which I hope to leverage in future roles. Additionally, this project reinforced the importance of simplicity and clean design when creating personal projects, underscoring the idea that less can often be more in web development.",
        "frameworks": [
            {
                "name": "React.JS"
            },
            {
                "name": "Flask"
            },
            {
                "name": "Tailwind CSS"
            },
            {
                "name": "SQLite"
            }
        ],
        "languages": [
            {
                "name": "HTML"
            },
            {
                "name": "CSS"
            },
            {
                "name": "JavaScript"
            },
            {
                "name": "Python"
            },
            {
                "name": "SQL"
            }
        ],
        "environments": [
            {
                "name": "Visual Studio Code"
            },
            {
                "name": "Postman"
            }
        ],
        "links": [
            {
                "type": "Frontend",
                "site": "GitHub",
                "link": "N/A",
                "status": "unavailable"
            },
            {
                "type": "Backend",
                "site": "GitHub",
                "link": "N/A",
                "status": "unavailable"
            }
        ]
    },
    {
        "id": 3,
        "name": "PREMIER LEAGUE PREDICTOR (2023)",
        "tags": "premier-league-predictor",
        "note": "## UNAVAILBLE TO VIEW ##",
        "desc": "During the summer break of 2023, I developed a small project centred around predicting the upcoming English Premier League season at that time (2023/24). The project features two tables where users can input their predictions for the season, with the other displaying the results. I created this predictor as a fun way to engage with the league while ensuring the underlying mathematics and calculations adhered to the Premier League's points-based system and rules. This side project challenged my mathematical skills, particularly in implementing accurate calculations within a structured framework.\n\nKey Features:\nHowever, due to this project being two straightforward tables, the features are quite limited. The few features it has are:\n • Match Input Table: Users can interact with the table by clicking on individual matchups. The matchups are determined by the first row (representing the away team) and the first column (representing the home team). Each cell corresponds to a specific match. Clicking on a cell determines the result:\nGreen: A win for the home team (3 points) and a loss for the away team.\nGrey: A draw, awarding 1 point to both teams.\nRed: A loss for the home team (0 points) and a win for the away team (3 points).\n • Results Table: The results table dynamically updates whenever the Match Input Table is modified. It calculates and displays the updated standings, including each team's position, total points, number of wins, draws, and losses, reflecting the Premier League's point system.\n\nDevelopment Highlights: \nThis project focuses solely on frontend development and styling, featuring the following:\n • Client-side: The frontend is built with Vue.JS, chosen for its simplicity and my familiarity with it at the time. Its clean structure made it an ideal choice for this project.\n • Styling: Tailwind CSS was used once again to design and style the tables, providing a streamlined and efficient approach to layout and styling.\n\nAlthough this was a mini project and didn’t contribute to developing interpersonal skills, it offered valuable technical benefits. Specifically, it enhanced my mathematical and computational skills within a programming context. Moreover, it was a satisfying project to complete, as it served a practical purpose and was achievable within a short timeframe.",
        "frameworks": [
            {
                "name": "Vue.JS"
            },
            {
                "name": "Tailwind CSS"
            }
        ],
        "languages": [
            {
                "name": "HTML"
            },
            {
                "name": "CSS"
            },
            {
                "name": "JavaScript"
            }
        ],
        "environments": [
            {
                "name": "Visual Studio Code"
            }
        ],
        "links": [
            {
                "type": "Frontend",
                "site": "GitHub",
                "link": "N/A",
                "status": "unavailable"
            }
        ]
    },
    {
        "id": 4,
        "name": "INITIAL CIPHER (2024)",
        "tags": "initial-cipher",
        "note": "## UNAVAILABLE TO VIEW ##",
        "desc": "In the winter of 2024, I created a Java program that explored encryption techniques as a passion project to improve my Java programming skills and deepen my understanding of cryptographic algorithms. The program provides a secure mechanism to encrypt user-provided passwords using a combination of techniques, including a custom character-doubling method, Caesar cipher, and Vigenère cipher.\n\nKey Features:\n • Password Input and Encryption: Users can input a password, which is then processed through multiple layers of encryption for added security.\n • Doubling Characters: Each character of the password is duplicated to increase its length and introduce redundancy.\n • Alternating Caesar Cipher: A modified Caesar cipher encrypts the password by alternating shifts for consecutive letters: one shifted forward and the next backward.\n • Vigenère Cipher: The final encryption layer applies the Vigenère cipher, using a user-specified key to add complexity to the transformation.\n\nDevelopment Highlights: \nThis project does not include any frameworks, it is purely a java programming project, and includes techniques such as:\n • Dynamic String Manipulation: Used StringBuilder for efficient operations on large strings.\n • Character Handling: Implemented logic to differentiate between uppercase and lowercase letters, preserving non-alphabetical characters in their original form.\n • Key Cycling: Designed an algorithm to cycle through the Vigenère key for consistent encryption.\n\nThis project served as a valuable learning experience, reinforcing the importance of blending theoretical knowledge with practical implementation. It has inspired me to further explore cryptography and its applications in modern software systems. Additionally, it was both challenging and rewarding, allowing me to experiment with algorithm design while solidifying my knowledge of Java fundamentals. Although it is a complete prototype, I see potential for further enhancements, such as introducing decryption methods and integrating a graphical user interface.",
        "frameworks": [
            {
                "name": "N/A"
            }
        ],
        "languages": [
            {
                "name": "Java"
            }
        ],
        "environments": [
            {
                "name": "Visual Studio Code"
            }
        ],
        "links": [
            {
                "type": "Cipher",
                "site": "GitHub",
                "link": "N/A",
                "status": "unavailable"
            }
        ]
    },
    {
        "id": 5,
        "name": "OLD PORTFOLIO (2024)",
        "tags": "old-portfolio",
        "note": "## UNAVAILBLE TO VIEW ##\n## THIS PROJECT IS ABANDONED ##",
        "desc": "After graduating from university in the summer of 2024, I began working on a portfolio to showcase my projects and skills. However, this initial version was never completed, as it was abandoned and was eventually replaced by the current portfolio you're viewing right now. The old version only had two sections finished: the home screen and the about section, which are the only parts that were fully developed and included on the site. The project section had a start but was ultimately unfinished.\n\nKey Features:\n • Colour Changing Screen: In the home screen, the background gradient changes colour every few seconds in a smooth transition. A combination of JavaScript and CSS was used to create this effect with a random number generator.\n • About Me Segment: Users can see a segment that shows a picture of me at my graduation, along with some text about myself. However, the text displayed was a placeholder, using the common dummy text called “Lorem Ipsum.”\n • Education Segment: Users can also view my educational background, from secondary school to university. Each level of education is a dropdown, which displays my subjects and grades for each institution.\n • Projects Section: Users can also view my projects, each with a title, description, and a link to see that project, whether it’s through GitHub or the hosted site itself. However, this section was never complete.\n\nDevelopment Highlights: \nUsing the same old tech stack from previous full stack projects, minus the server-side, it is the following:\n • Client-side: Developed using Vue.JS, it is the latest project to use Vue.JS, but at this point, I felt like I needed to move on to different frameworks.\n • Styling: Tailwind returns as the styling framework of choice, no complaints with the framework itself, but the colour scheme and style of the website was no my finest work, I definitely improve after this project. \n\nThis project was abandoned for several reasons, including frustration with the frameworks I was using, dissatisfaction with the design, and the need to prioritise applying for software engineering roles. When I eventually decided to create a portfolio again, I opted to start from scratch and chose not to use Vue.JS. After developing a project with React.JS and enjoying the experience, I decided to use that framework instead, which led to the creation of the portfolio you see now. This experience taught me that it’s okay to abandon projects when they no longer align with your goals or when you outgrow the tools and approaches you initially chose. It reinforced the importance of flexibility, learning from past efforts, and being open to change. By reflecting on what didn’t work before, I was able to approach this portfolio with fresh ideas and a more refined skill set, resulting in a project I am truly proud of.",
        "frameworks": [
            {
                "name": "Vue.JS"
            },
            {
                "name": "Tailwind CSS"
            }
        ],
        "languages": [
            {
                "name": "HTML"
            },
            {
                "name": "CSS"
            },
            {
                "name": "JavaScript"
            }
        ],
        "environments": [
            {
                "name": "Visual Studio Code"
            }
        ],
        "links": [
            {
                "type": "Frontend",
                "site": "GitHub",
                "link": "N/A",
                "status": "unavailable"
            }
        ]
    },
    {
        "id": 6,
        "name": "PORTFOLIO (2024)",
        "tags": "portfolio",
        "note": "## YOU ARE CURRENTLY VIEWING THIS WEBSITE ##\n## SOURCE CODE AVAILABLE ON GITHUB ##",
        "desc": "After abandoning my previous portfolio, I decided in the autumn of 2024 to start fresh and rebuild it. Drawing lessons from my earlier project, which used different frameworks, I chose to begin from scratch with new tools and ideas while maintaining a similar design and structure. This time, the project was successfully completed, creating a portfolio ready to showcase my professional achievements and skills.\n\nKey Features:\n • About Me Segment: Users can view a section featuring a picture of me at my graduation accompanied by a brief description about myself. The text and image are displayed in overlapping textboxes, which align neatly when the 'Readability' button is toggled on.\n • Education Segment: This section presents my educational background, spanning from secondary school to university. Each level of education is organised into dropdown menus. Clicking a dropdown reveals a list of subjects, and interacting with a subject button triggers a popup displaying detailed information about the subject and the grade I achieved.\n • Projects Section: Users can explore both my university and personal projects. Interacting with a project opens a popup that showcases the title, skills utilized, a description, and project links. Additionally, a slideshow feature allows users to scroll through project visuals.\n • Skills Section: This section highlights the technical and interpersonal skills I've acquired over the years. Interacting with a skill triggers an Apple iOS-inspired popup effect, where the button enlarges and a detailed description of the skill appears in a box.\n • Main Contact Segment: This segment includes all my primary contact information, such as my email and phone number, which are interactive and launch the user’s default email or phone call applications. It also features additional elements like a Google Maps display showing my general location and a preview of the information available in the next segment.\n • Social Media and CV Segment: Users can access links to my professional social media profiles and download my CV. The buttons are styled to resemble their respective social media platforms, providing a cohesive visual experience. My CV download button is also designed to integrate seamlessly with the theme.\n • End Screen: At the conclusion of the portfolio, users are greeted with a thank-you message alongside additional details such as credits (myself as the creator) and the framework used in the project. The background features a dynamic and visually complex effect created using a Java constructor, with particles generated and animated to enhance the user experience.\n\nDevelopment Highlights: \nThis project was built entirely client-side, without the use of a server-side component. The key frameworks and technologies employed include:\n • Client-side: The project was developed using React.JS, a framework I had limited experience with prior to this project. Working on this portfolio, as well as my “Uncanny Clothing” website, significantly enhanced my proficiency with React. Through this process, I gained a deep understanding of various state management techniques and core functionalities of the framework.\n • Styling: Tailwind CSS was the primary styling framework used, as it continues to be my preferred tool for its efficiency and flexibility. However, I incorporated more standard CSS in this project than in previous ones, primarily to implement custom animations not fully supported by Tailwind.\n\nThis project is one I am particularly proud of, as it showcases my ability to develop a complex web application from scratch using a frontend framework I initially had limited experience with. Compared to my previous, unfinished portfolio, this version is a significant improvement. Not only does it feature a sleeker design and colour scheme, but its structure and functionality align perfectly with my vision, exceeding my expectations. I aimed to create a portfolio that not only satisfies my personal standards but also will hopefully leave a lasting impression on users viewing it. Remarkably, I completed this project in a short timeframe, taking it from inception to deployment on GitHub within just a few months.",
        "frameworks": [
            {
                "name": "React.JS"
            },
            {
                "name": "Tailwind CSS"
            }
        ],
        "languages": [
            {
                "name": "HTML"
            },
            {
                "name": "CSS"
            },
            {
                "name": "JavaScript"
            }
        ],
        "environments": [
            {
                "name": "Visual Studio Code"
            }
        ],
        "links": [
            {
                "type": "Frontend",
                "site": "Hosted",
                "link": "https://salmannn7.github.io/Portfolio",
                "status": "available"
            },
            {
                "type": "Frontend",
                "site": "GitHub",
                "link": "https://github.com/salmannn7/Portfolio",
                "status": "available"
            }
        ]
    },
    {
        "id": 7,
        "name": "PHOENIX (2024)",
        "tags": "phoenix-project",
        "note": "## UNAVAILBLE TO VIEW ##\n## THIS PROJECT IS CURRENTLY UNDER DEVELOPMENT ##",
        "desc": "After completing my Portfolio, I immediately started a new project to further hone my skills in the tech industry. Drawing inspiration from the social media platform Twitter (now known as 'X'), I set out to create a social media app named Phoenix. The app aims to replicate Twitter’s core functionality while incorporating additional features that are either missing or locked behind a paywall on similar platforms. The name Phoenix symbolises rebirth and resilience, reflecting both the mythical bird that rises from the ashes and the decline of Twitter under Elon Musk’s leadership. This project represents a fresh take on social media, rising from those ashes to offer a better user experience. As this project is still in development, its description remains limited, but more details will follow as progress is made.\n\nKey Features (So Far):\n • View Posts and Comments: Users can view posts in their feed, along with a display of comments under each post. (Implemented in Backend.)\n • Add Posts and Comments: Users can create posts and add comments to others’ posts, fostering engagement within the platform. (Implemented in Backend.)\n • User Accounts: Registered users can access these features, with additional functionalities planned for future development. (Implemented in Backend.)\n\nDevelopment Highlights:\nChanging my tech stack from previous projects, I went new frameworks with no past experience with to challenge myself. The tech stack includes:\n • Server-side: The backend is being developed with Express.JS, a framework I’ve used before. I chose Express.JS not only because of my familiarity with it but also because it integrates seamlessly with MongoDB, the database framework I’m using for this project.\n • Client-side: The frontend is built with Angular, marking the final piece of my journey through the 'big three' frontend frameworks—Vue.JS, React.JS, and now Angular.JS. Learning Angular has been challenging, particularly due to its heavy reliance on TypeScript, but I’m gradually becoming more comfortable with it.\n • Styling: As with my previous projects, I’m using Tailwind CSS for styling, leveraging its simplicity and flexibility to maintain a consistent, efficient workflow.\n • Database: In contrast to my previous projects where I used SQLite, I decided to use MongoDB for this project. MongoDB is a NoSQL database that uses JSON-like documents, and I’ve been hearing about its versatility for a long time. While it was initially difficult to grasp, I now have a solid understanding of how it functions and how to structure my database interactions effectively.\n\nThis project is still in its early stages, so there’s much work to be done before the final product takes shape. My goal is to complete Phoenix and potentially deploy it online as a competitive alternative to existing social media platforms. I’m excited about the potential of this project to meet my personal goals while showcasing my ability to innovate and adapt to new challenges in the tech space.",
        "frameworks": [
            {
                "name": "Angular.JS"
            },
            {
                "name": "Express.JS"
            },
            {
                "name": "MongoDB"
            },
            {
                "name": "Tailwind CSS"
            }
        ],
        "languages": [
            {
                "name": "HTML"
            },
            {
                "name": "CSS"
            },
            {
                "name": "JavaScript"
            },
            {
                "name": "TypeScript"
            }
        ],
        "environments": [
            {
                "name": "Visual Studio Code"
            },
            {
                "name": "MongoDB Compass"
            }
        ],
        "links": [
            {
                "type": "Frontend",
                "site": "GitHub",
                "link": "N/A",
                "status": "unavailable"
            },
            {
                "type": "Backend",
                "site": "GitHub",
                "link": "N/A",
                "status": "unavailable"
            }
        ]
    }
]